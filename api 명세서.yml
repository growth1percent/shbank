openapi: 3.0.3
info:
  title: SHBank API
  version: 1.0.0
  description: 미니 핀테크 애플리케이션 API 명세서
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        name:
          type: string
        email:
          type: string
    Account:
      type: object
      properties:
        accountId:
          type: integer
        accountName:
          type: string
        accountNumber:
          type: string
        accountType:
          type: string
          enum: [PRIMARY, CHECKING, SAVINGS, MERCHANT]
        balance:
          type: integer
        transferLimit:
          type: integer
    Transaction:
      type: object
      properties:
        transactionId:
          type: integer
        accountId:
          type: integer
        amount:
          type: integer
        balance:
          type: integer
        date:
          type: string
          format: date-time
        type:
          type: string
          enum: [TRANSFER_IN, TRANSFER_OUT, CARD_PAYMENT]
    Transfer:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          properties:
            recipientAccountId:
              type: integer
            memo:
              type: string
            scheduleDate:
              type: string
              format: date-time
    CardPayment:
      allOf:
        - $ref: '#/components/schemas/Transaction'
        - type: object
          properties:
            merchantName:
              type: string
            merchantAccount:
              type: string
    AuthToken:
      type: object
      properties:
        accessToken:
          type: string
        accessTokenExpiresIn:
          type: integer
        refreshToken:
          type: string
        refreshTokenExpiresIn:
          type: integer
servers:
  - url: https://api.shbank.com/api/v1
tags:
  - name: Auth
    description: 로그인/회원가입
  - name: Users
    description: 사용자 정보 조회 및 수정
  - name: Accounts
    description: 계좌 조회, 이체, 계좌 관리
  - name: Payments
    description: 결제
paths:
  /auth/signup:
    post:
      tags:
        - Auth
      summary: 회원가입
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  example : 홍길동
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  example: 123456
      responses:
        '201':
          description: 회원가입 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
        '409':
          description: 이미 존재하는 이메일
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: EMAIL_ALREADY_EXISTS
                  message:
                    type: string
                    example: "해당 이메일은 이미 사용 중입니다."
  /auth/login:
    post:
      summary: 로그인
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  example: 123456
      responses:
        '200':
          description: 로그인 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: 액세스 토큰 (JWT)
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  accessTokenExpiresIn:
                    type: integer
                    description: 액세스 토큰 만료 시간(초)
                    example: 3600
                  refreshToken:
                    type: string
                    description: 리프레시 토큰
                    example: "def50200b3f1..."
                  refreshTokenExpiresIn:
                    type: integer
                    description: 리프레시 토큰 만료 시간(초)
                    example: 604800
                  userId:
                    type: integer
                  name:
                    type: string
                    example: 홍길동
                  email:
                    type: string
                    format: email
  /auth/refresh:
    post:
      summary: 액세스 토큰 갱신
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - refreshToken
              properties:
                refreshToken:
                  type: string
                  description: 기존 리프레시 토큰
      responses:
        '200':
          description: 토큰 갱신 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accessToken:
                    type: string
                    description: 새 액세스 토큰
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                  accessTokenExpiresIn:
                    type: integer
                    description: 새 액세스 토큰 만료 시간(초)
                    example: 3600
                  refreshToken:
                    type: string
                    description: 새 리프레시 토큰
                    example: "def50200b3f1..."
                  refreshTokenExpiresIn:
                    type: integer
                    description: 새 리프레시 토큰 만료 시간(초)
                    example: 604800
        '401':
          description: 리프레시 토큰 만료 또는 유효하지 않음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: INVALID_REFRESH_TOKEN
                  message:
                    type: string
                    example: "리프레시 토큰이 만료되었거나 유효하지 않습니다."
  /users/me:
    get:
      summary: 내 정보 조회
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 내 정보 조회 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  userId:
                    type: integer
                  name:
                    type: string
                    example: 홍길동
                  email:
                    type: string
                    format: email
        '401':
          description: 인증 실패 (JWT 토큰이 없거나 유효하지 않음)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "인증이 필요합니다."
    patch:
      summary: 내 정보 수정
      tags:
        - Users
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: 홍하나 
                email:
                  type: string
                  example: user1@example.com
      responses:
        '200':
          description: 내 정보 수정 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  name:
                    type: string
                    example: 홍하나
                  email:
                    type: string
                    example: user1@example.com
        '400': 
          description: 잘못된 요청 (이메일 형식 오류)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: INVALID_REQUEST
                  message:
                    type: string
                    example: "이메일 형식이 올바르지 않습니다."
                  
        '401':
          description: 인증 실패 (JWT 토큰 없음 또는 만료)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "로그인이 필요합니다."
  /accounts:
    post:
      summary: 계좌 개설
      tags:
        - Accounts
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - accountName
                - type
                - initialDeposit
                - transferLimit
                - authPassword
              properties:
                accountName:
                  type: string
                  description: 계좌명
                  example: "입출금통장"
                accountType:
                  type: string
                  description: 계좌 유형
                  enum: [PRIMARY, CHECKING, SAVINGS, MERCHANT]
                  example: "PRIMARY"
                initialDeposit:
                  type: integer
                  description: 초기 입금액
                  example: 500000
                transferLimit:
                  type: integer
                  description: 1회 이체 한도
                  example: 1000000
                authPassword:
                  type: string
                  format: password
                  description: 계좌 비밀번호
                  example: "123456"
      responses:
        '201':
          description: 계좌 개설 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
                    description: 새로 생성된 계좌 ID
                  accountName:
                    type: string
                    description: 계좌명
                    example: "입출금통장"
                  accountNumber:
                    type: string
                    description: 계좌 번호
                    example: "1234-567-890123"
                  type:
                    type: string
                    example: "PRIMARY"
                  balance:
                    type: integer
                    description: 초기 입금액
                    example: 500000
                  transferLimit:
                    type: integer
                    description: 1회 이체 한도
                    example: 1000000
        '400':
          description: 잘못된 요청 (입력값 검증 실패)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: INVALID_INITIAL_DEPOSIT
                  message:
                    type: string
                    example: "초기 입금액은 0원 이상이어야 합니다."
              examples:
                invalidInitialDeposit:
                  summary: 초기 입금액 오류
                  value:
                    errorCode: INVALID_INITIAL_DEPOSIT
                    message: "초기 입금액은 0원 이상이어야 합니다."
                invalidAuthPassword:
                  summary: 계좌 비밀번호 오류
                  value:
                    errorCode: INVALID_AUTH_PASSWORD
                    message: "계좌 비밀번호는 6자리 숫자여야 합니다."
    get:
      summary: 내 계좌 목록 조회
      tags:
        - Accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 계좌 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: integer
                      description: 내 계좌 고유 ID
                    accountName:
                      type: string
                      description: 내 계좌 소유자 명
                    accountNumber:
                      type: string
                      description: 내 계좌 번호
                    balance:
                      type: integer
                      description: 내 계좌 잔액
                    accountType:
                      type: string
                      enum: [PRIMARY, CHECKING, SAVINGS, MERCHANT]
                      description: 계좌 유형
                  example:
                    - accountId: 1
                      accountName: "주계좌"
                      accountNumber: "1234-567-890123"
                      balance: 5000000
                      accountType: "PRIMARY"
                    - accountId: 2
                      accountName: "입출금계좌"
                      accountNumber: "1234-567-890124"
                      balance: 10000000
                      accountType: "CHECKING"
        '401':
          description: 인증 실패 (JWT 토큰 없음 또는 만료)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "로그인이 필요합니다."  
  /accounts/{accountNumber}:
    get:
      summary: 단일 계좌 조회
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountNumber
          required: true
          description: 조회할 계좌의 번호
          schema:
            type: string
      responses:
        '200':
          description: 계좌 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
                    description: 계좌 고유 ID
                  accountNumber:
                    type: string
                    example: "1234-567-890124"
                    description: 조회한 계좌 번호
                  accountOwner:
                    type: string
                    example: "홍하나"
                    description: 조회 계좌 사용자 명
        '401':
          description: 인증 실패
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "로그인이 필요합니다."
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."
  /accounts/{accountId}:
    delete:
      summary: 계좌 삭제
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 삭제할 계좌 ID
          schema:
            type: integer
      responses:
        '200':
          description: 계좌 삭제 성공
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
                    description: 삭제할 계좌 ID
                  message:
                    type: string
                    example: "계좌가 삭제되었습니다."
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."
  /accounts/{accountId}/transactions:
    get:
      summary: 거래 내역 조회 (날짜 조건 검색)
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 거래 내역을 조회할 계좌의 ID
          schema:
            type: integer
        - in: query
          name: startDate
          description: 조회 시작 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
        - in: query
          name: endDate
          description: 조회 종료 날짜 (YYYY-MM-DD)
          schema:
            type: string
            format: date
      responses:
        '200':
          description: 거래 내역
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    transactionId:
                      type: integer
                      description: 거래내역 고유 ID
                    type:
                      type: string
                      enum: [TRANSFER_IN, TRANSFER_OUT, CARD_PAYMENT]
                      description: 거래 유형 (입금, 출금, 이체)
                    amount:
                      type: integer
                      description: 거래 금액
                      example: 50000
                    balance:
                      type: integer
                      description: 거래 후 잔액
                      example: 950000
                    senderName:
                      type: string
                      description: 송신인 이름 (입금 시 표시)
                      example: "홍길동"
                    senderAccount:
                      type: string
                      description: 송신인 계좌 (입금 시 표시)
                      example: "1234-567-890123"
                    recipientName:
                      type: string
                      description: 수신인 이름 (출금 시 표시)
                      example: "홍하나"
                    recipientAccount:
                      type: string
                      description: 수신인 계좌 (출금 시 표시)
                      example: "1234-567-890124"
                    transactionDate:
                      type: string
                      format: date-time
        '401':
          description: 인증 실패 (JWT 토큰 없음 또는 만료)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "로그인이 필요합니다."  
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다." 
  /accounts/scheduled-transfers:
    get:
      summary: 예약 송금 목록 조회
      tags:
        - Accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: 예약 송금 목록
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: integer
                      description: 계좌 ID
                    transferId:
                      type: integer
                      description: 예약 송금 고유 ID
                    recipientName:
                      type: string
                      description: 받는 사람 계좌
                      example: "홍하나"
                    amount:
                      type: integer
                      description: 예약 금액
                      example: 50000
                    scheduleDate:
                      type: string
                      format: date-time
                      description: 예약된 송금일시
                    memo:
                      type: string
                      description: 메모
                      example: "용돈"
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."
  /accounts/{accountId}/transfer:
    post:
      summary: 이체 (즉시/예약 송금)
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
      - in: path
        name: accountId
        required: true
        description: 이체하는 계좌의 ID
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - recipientAccountId
                - amount
                - authPassword
              properties:
                recipientAccountId:
                  type: integer
                  description: 받는 사람 계좌 ID
                amount:
                  type: integer
                  example: 50000
                  description: 이체 금액
                authPassword:
                  type: string
                  format: password
                  example: 123456
                  description: 인증 비밀번호호
                scheduleDate:
                  type: string
                  format: date-time
                  example: "2025-08-29T12:30:00Z"
                  description: 예약송금 시 예약날짜
                memo:
                  type: string
                  example: "용돈"
                  description: 예약송금 시 메모
      responses:
        '200':
          description: 이체 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipientAccount:
                    type: string
                    description: 받는 사람 계좌
                  amount:
                    type: integer
                    description: 이체 금액
                  date:
                    type: string
                    format: date-time
                    description: 거래일시
                  balance:
                    type: integer
                    description: 거래 후 잔액
                  status:
                    type: string
                    enum: [SCHEDULED, COMPLETED]
                    description: 즉시/예약 송금 상태
              examples:
                immediateTransfer:
                  summary: 즉시 이체 성공
                  value:
                    recipientAccount: "123-456-789"
                    amount: 50000
                    date: "2025-08-29T10:30:00Z"
                    balance: 995000
                    status: "COMPLETED"
                scheduledTransfer:
                  summary: 예약 송금 등록
                  value:
                    accountId: 0
                    recipientAccount: "123-456-789"
                    amount: 50000
                    date: "2025-08-30T09:00:00Z"
                    balance: 995000
                    status: "SCHEDULED"
        '400':
          description: 잘못된 요청 (scheduleDate가 현재 시각 이전)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: INVALID_SCHEDULE_DATE
                  message:
                    type: string
                    example: "예약 송금 날짜는 현재 시각 이후여야 합니다."   
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."        
  /accounts/{accountId}/transfer/{transferId}/cancel:
    patch:
      summary: 예약 송금 취소 (상태 변경)
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 예약 송금이 등록된 계좌 ID
          schema:
            type: integer
        - in: path
          name: transferId
          required: true
          description: 취소할 예약 송금 ID
          schema:
            type: integer
      responses:
        '200':
          description: 예약 송금 취소 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferId:
                    type: integer
                    description: 취소된 예약 송금 ID
                  status:
                    type: string
                    example: "CANCELED"
                    description: 상태 변경
                  message:
                    type: string
                    example: "예약 송금이 취소되었습니다."
        '404':
          description: 계좌 또는 예약 송금을 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: TRANSFER_NOT_FOUND
                  message:
                    type: string
                    example: "해당 예약 송금을 찾을 수 없습니다."
  /accounts/{accountId}/verify-auth-password:
    post:
      summary: 계좌 인증 비밀번호 확인
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
      - in: path
        name: accountId
        required: true
        description: 이체하는 계좌의 ID
        schema:
          type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - authPassword
              properties:
                authPassword:
                  type: string
                  format: password
                  description: 인증 비밀번호
      responses:
        '200':
          description: 인증 결과
          content:
            application/json:
              schema:
                type: object
                properties:
                  verified:
                    type: boolean
        '401':
          description: 인증 실패 (JWT 토큰 없음 또는 만료)
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: UNAUTHORIZED
                  message:
                    type: string
                    example: "로그인이 필요합니다." 
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."  
  /accounts/{accountId}/settings:
    get:
      summary: 계좌 설정 조회 (1회 이체 한도)
      tags:
        - Accounts
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 설정 조회할 계좌의 ID
          schema:
            type: integer
      responses:
        '200':
          description: 계좌 설정 정보
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferLimit:
                    type: integer
                    description: 1회 이체 한도
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."
    patch:
      summary: 계좌 설정 변경 (1회 이체 한도, 계좌 비밀번호)
      tags:
        - Accounts
      security:
      -   bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 설정 변경할 계좌의 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                transferLimit:
                  type: integer
                  description: 1회 이체 한도 변경 시 포함
                  example: 100000
                authPassword:
                  type: object
                  description: 비밀번호 변경 시 포함
                  properties:
                    current:
                      type: string
                      format: password
                      description: 현재 비밀번호
                      example: 123456
                    new:
                      type: string
                      format: password
                      description: 새 비밀번호
                      example: 234561
      responses:
        '200':
          description: 계좌 설정 변경 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  transferLimit:
                    type: integer
                    description: 변경된 한도
                    example: 500000
        '400':
          description: 현재 비밀번호 불일치
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: INVALID_AUTH_PASSWORD
                  message:
                    type: string
                    example: "현재 비밀번호가 올바르지 않습니다."
        '404':
          description: 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 계좌를 찾을 수 없습니다."  
  /accounts/{accountId}/card-payments:
    post:
      summary: 카드 결제
      tags:
        - Payments
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: accountId
          required: true
          description: 결제할 계좌의 ID
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - merchantName
                - amount
              properties:
                merchantName:
                  type: string
                  example: "스타벅스"
                amount:
                  type: integer
                  example: 50000
      responses:
        '200':
          description: 결제 완료
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: integer
                    description: 계좌 ID
                  merchantName:
                    type: string
                    description: 결제한 가맹점 이름
                    example: "스타벅스"
                  merchantAccount:
                    type: string
                    description: 결제된 가맹점 계좌 번호
                    example: "1234-567-000001"
                  amount:
                    type: integer
                    description: 결제 금액
                    example: 50000
                  date:
                    type: string
                    format: date-time
                    description: 결제 완료 시각
                  balance:
                    type: integer
                    description: 결제 후 사용자 계좌 잔액
                    example: 950000
        '404':
          description: 가맹점 계좌를 찾을 수 없음
          content:
            application/json:
              schema:
                type: object
                properties:
                  errorCode:
                    type: string
                    example: ACCOUNT_NOT_FOUND
                  message:
                    type: string
                    example: "해당 가맹점 계좌를 찾을 수 없습니다."
                     


